<template>
  <div class="register-container">
    <div class="card">
      <div class="card-body">
        <h5 class="card-title">用户注册</h5>
        
        <form id="registration-form" @submit.prevent="handleRegister">
          <div class="form-group">
            <label for="username">用户名</label>
            <input 
              type="text" 
              class="form-control" 
              id="username" 
              v-model="registerForm.username"
              placeholder="请输入用户名" 
              required
            >
          </div>
          
          <div class="form-group">
            <label for="email">邮箱</label>
            <input 
              type="email" 
              class="form-control" 
              id="email" 
              v-model="registerForm.email"
              placeholder="请输入邮箱" 
              required
            >
          </div>
          
          <div class="form-group">
            <label for="password">密码</label>
            <input 
              type="password" 
              class="form-control" 
              id="password" 
              v-model="registerForm.password"
              placeholder="请输入密码" 
              required
            >
          </div>
          
          <button 
            type="submit" 
            class="btn btn-primary btn-block"
          >
            <i class="fas fa-user-plus"></i> 注册
          </button>
        </form>
      </div>
    </div>
  </div>
</template>

<script setup>
import { reactive, onMounted } from 'vue';
import { useRouter } from 'vue-router';
import { register, getCurrentUser } from '../services/userService';
import { notifySuccess, notifyError } from '../services/notificationService';

// 路由实例
const router = useRouter();

// 表单数据
const registerForm = reactive({
  username: '',
  email: '',
  password: ''
});

// 处理注册
async function handleRegister() {
  try {
    console.log('尝试注册用户:', registerForm.username);
    
    // 调用注册服务
    const user = await register({
      username: registerForm.username,
      email: registerForm.email,
      password: registerForm.password
    });
    
    console.log('注册成功:', user);
    
    // 注册成功提示
    notifySuccess('注册成功！正在跳转到登录页面');
    
    // 清空表单
    registerForm.username = '';
    registerForm.email = '';
    registerForm.password = '';
    
    // 注册成功后跳转到登录页面
    setTimeout(() => {
      router.push('/login');
    }, 1000);
    
  } catch (error) {
    // 显示错误消息
    console.error('注册失败:', error);
    notifyError(error.message || '注册失败，请稍后再试');
  }
}

// 检查用户是否已登录
onMounted(() => {
  const currentUser = getCurrentUser();
  
  if (currentUser) {
    // 用户已登录，跳转到仪表盘
    router.push('/dashboard');
  }
});
</script>

<style scoped>
.register-container {
  width: 100%;
  max-width: 450px;
  margin: 20px auto;
}

.card {
  background: #fff;
  border: none;
  border-radius: 20px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
  overflow: hidden;
  position: relative;
}

.card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 3px;
  background: linear-gradient(90deg, #3E78FF, #6C63FF);
}

.card-body {
  padding: 30px 40px;
}

.card-title {
  color: #333;
  font-weight: 600;
  margin-bottom: 30px;
  font-size: 1.4rem;
  text-align: center;
  position: relative;
}

.card-title::after {
  content: '';
  position: absolute;
  bottom: -8px;
  left: 25%;
  width: 50%;
  height: 2px;
  background: linear-gradient(90deg, #3E78FF, #6C63FF);
}

.form-group {
  margin-bottom: 25px;
  position: relative;
}

.form-group label {
  display: block;
  margin-bottom: 12px;
  color: #555;
  font-size: 0.95rem;
}

.form-control {
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 10px;
  padding: 12px 15px;
  width: 100%;
  font-size: 1rem;
  background-color: rgba(248, 249, 250, 0.5);
}

.form-control:focus {
  border-color: #3E78FF;
  box-shadow: 0 0 0 3px rgba(62, 120, 255, 0.1);
  outline: none;
}

.btn {
  display: block;
  width: 100%;
  padding: 12px;
  font-weight: 500;
  text-align: center;
  border-radius: 10px;
  cursor: pointer;
  transition: all 0.3s;
  margin-top: 15px;
}

.btn-primary {
  background: linear-gradient(90deg, #4365FA, #5D5FEF);
  color: white;
  border: none;
}

.btn-primary:hover {
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(93, 95, 239, 0.3);
}

/* 移动端适配 */
@media (max-width: 576px) {
  .card-body {
    padding: 25px 20px;
  }
}
</style> 